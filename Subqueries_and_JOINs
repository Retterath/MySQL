/* Subqueries and JOINs */
#1. Employee Address
SELECT 
    e.employee_id, e.job_title, a.address_id, a.address_text
FROM
    employees AS e
        JOIN
    addresses AS a ON e.address_id = a.address_id
    ORDER BY a.address_id
    LIMIT 5;
    
#2.	Addresses with Towns
SELECT e.first_name, e.last_name, t.`name`, a.address_text FROM employees AS e
JOIN addresses AS a
ON e.address_id = a.address_id
JOIN towns AS t
ON a.town_id = t.town_id
ORDER BY first_name, last_name
LIMIT 5;

#3.	Sales Employee
SELECT 
    e.employee_id, e.first_name, e.last_name, d.`name`
FROM
    employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE `name` = 'Sales'
ORDER BY e.employee_id DESC;

#4.	Employee Departments
SELECT 
    e.employee_id,
    e.first_name,
    e.salary,
    d.`name` AS department_name
FROM
    employees AS e
    JOIN departments AS d
    ON e.department_id = d.department_id
    WHERE salary > 15000
    ORDER BY d.department_id DESC
    LIMIT 5;

#5.	Employees Without Project

SELECT 
    e.employee_id, e.first_name
FROM
    employees AS e
    LEFT JOIN employees_projects AS ep
    ON e.employee_id = ep.employee_id
    WHERE ep.project_id is NULL
    ORDER BY e.employee_id DESC
    LIMIT 3;

#6.	Employees Hired After

SELECT 
    e.first_name,
    e.last_name,
    e.hire_date,
    d.`name` AS dept_name
FROM
    employees AS e
    JOIN departments AS d
    ON e.department_id = d.department_id
    WHERE e.hire_date > '1999-01-01' AND d.`name` IN ('Sales', 'Finance')
    ORDER BY e.hire_date;
    
#7.	Employees with Project

SELECT 
    e.employee_id, e.first_name, p.`name`
FROM
    employees AS e
    JOIN employees_projects AS ep
    ON e.employee_id = ep.employee_id
    JOIN projects AS p
    ON ep.project_id = p.project_id
    WHERE DATE(p.start_date) > '20020813' AND p.end_date IS NULL
    ORDER BY e.first_name, p.`name`
    LIMIT 5;

#8.	Employee 24

SELECT 
    e.employee_id, e.first_name, 
    (
		CASE
			WHEN YEAR(p.start_date) > 2004 THEN NULL 
            ELSE p.`name`
        END
    ) AS 'project_name'
FROM
    employees AS e
        JOIN
    employees_projects AS ep ON e.employee_id = ep.employee_id
		JOIN
	projects AS p ON ep.project_id = p.project_id
    WHERE e.employee_id = 24
    ORDER BY project_name;

#9. Employee Manager

SELECT e.employee_id, e.first_name, m.employee_id, m.first_name
FROM employees AS e
JOIN employees AS m
ON e.manager_id = m.employee_id
WHERE e.manager_id IN(3,7)
ORDER BY e.first_name;

#10. Employee Summary

SELECT e.`employee_id`,
       concat(e.`first_name`, ' ', e.`last_name`) AS `employee_name`,
       concat(m.`first_name`, ' ', m.`last_name`) AS `manager_name`,
       d.`name` AS `department_name`
FROM `employees` AS `e`
JOIN `employees` as `m` ON e.`manager_id` = m.`employee_id`
JOIN `departments` `d` ON e.`department_id` = d.`department_id`
WHERE e.`manager_id` IS NOT NULL
ORDER BY e.`employee_id`
LIMIT 5;

#11. Min Average Salary

SELECT avg(e.`salary`) AS `min_average_salary`
FROM `employees` AS `e`
GROUP BY e.`department_id`
ORDER BY `min_average_salary`
LIMIT 1;

#12. Highest Peaks in Bulgaria

SELECT c.`country_code`, m.`mountain_range`, p.`peak_name`, p.`elevation`
FROM `countries` AS `c`
JOIN `mountains_countries` `mc` ON `c`.`country_code` = `mc`.`country_code`
JOIN `mountains` `m` ON `mc`.`mountain_id` = `m`.`id`
JOIN `peaks` `p` ON `m`.`id` = `p`.`mountain_id`
WHERE c.`country_code` = 'BG' AND p.`elevation` > 2835
ORDER BY p.`elevation` DESC;

#13. Count Mountain Ranges

SELECT c.`country_code`, count(m.`mountain_range`) AS `mountain_range`
FROM `countries` AS `c`
JOIN `mountains_countries` `mc` ON `c`.`country_code` = `mc`.`country_code`
JOIN `mountains` `m` ON `mc`.`mountain_id` = `m`.`id`
WHERE c.`country_code` IN ('BG', 'US', 'RU')
GROUP BY c.`country_code`
ORDER BY `mountain_range` DESC;

#14. Countries with Rivers

SELECT c.`country_name`, r.`river_name`
FROM `countries` AS `c`
LEFT JOIN `countries_rivers` `cr` ON `c`.`country_code` = `cr`.`country_code`
LEFT JOIN `rivers` `r` ON `cr`.`river_id` = `r`.`id`
WHERE c.`continent_code` = 'AF'
ORDER BY c.`country_name`
LIMIT 5;

#15. *Continents and Currencies

SELECT c.`continent_code`, c.`currency_code`, count(*) AS 'currency_usage'
FROM `countries` AS `c`
GROUP BY c.`continent_code` , c.`currency_code`
HAVING `currency_usage` > 1 AND `currency_usage` = (
    SELECT count(*) AS `count` FROM `countries` AS `c2`
    WHERE `c2`.`continent_code` = c.`continent_code`
    GROUP BY `c2`.`currency_code`
    ORDER BY `count` DESC
    LIMIT 1)
ORDER BY c.`continent_code` , c.`continent_code`;

#16. Countries without any Mountains

SELECT count(c.`country_code`) AS `country_count` FROM `countries` AS `c`
LEFT JOIN `mountains_countries` `mc` ON `c`.`country_code` = `mc`.`country_code`
WHERE mc.`mountain_id` IS NULL;

#17. Highest Peak and Longest River by Country

SELECT c.`country_name`, max(p.`elevation`) as `highest_peak_elevation`,
       max(r.`length`) as `longest_river_length`
FROM `countries` AS `c`
LEFT JOIN `mountains_countries` `mc` ON `c`.`country_code` = `mc`.`country_code`
JOIN `mountains` AS `m` ON `mc`.`mountain_id` = `m`.`id`
JOIN `peaks` `p` ON `m`.`id` = `p`.`mountain_id`
LEFT JOIN `countries_rivers` `cr` ON `c`.`country_code` = `cr`.`country_code`
JOIN `rivers` `r` ON `cr`.`river_id` = `r`.`id`
GROUP BY c.`country_code`, `country_name`
ORDER BY `highest_peak_elevation` DESC,
         `longest_river_length` DESC,
         c.`country_name`
LIMIT 5;
















